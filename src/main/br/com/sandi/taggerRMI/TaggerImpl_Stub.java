// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package br.com.sandi.taggerRMI;

public final class TaggerImpl_Stub
    extends java.rmi.server.RemoteStub
    implements br.com.sandi.taggerRMI.Tagger
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_execute_0;
    private static java.lang.reflect.Method $method_ok_1;
    
    static {
	try {
	    $method_execute_0 = br.com.sandi.taggerRMI.Tagger.class.getMethod("execute", new java.lang.Class[] {java.lang.Object.class, br.com.sandi.entity.Projeto.class});
	    $method_ok_1 = br.com.sandi.taggerRMI.Tagger.class.getMethod("ok", new java.lang.Class[] {});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public TaggerImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of execute(Object, Projeto)
    public byte[] execute(java.lang.Object $param_Object_1, br.com.sandi.entity.Projeto $param_Projeto_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_execute_0, new java.lang.Object[] {$param_Object_1, $param_Projeto_2}, 8507795091009483817L);
	    return ((byte[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of ok()
    public java.lang.String ok()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_ok_1, null, 2695834865707188558L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
